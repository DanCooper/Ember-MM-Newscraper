<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAABYRSURBVHhe5ZoHVFbXssdHvXaNBRCkdxFUir1ETdRY
        gsaSojGJNy8mURMTNYqIigUsoIi9YVSKiqIUCzakCIJIR4r0DipFEbBgmTdz+D7vOR9fbu5775rrW+61
        fosz+9tnz/zn7LoWgIjvNEor3yWUVr5LKK18l1Ba+S4hMZ7X1CilsaoKnpWXwfPqKnheVdmMFw8fwJOs
        O1D40w9QtOgnKF1tDyWrlkPp+tVQtGwRFJP9OD1NaFNz8jhU+3jCXee1g9O11daULJg7sYLalSxZKNTX
        BJ6B0o3roHTdKqhwc4VSxxVwd/tWyJkxmbCF2pDL0JAQB/W3bjajIf4W1Fy7CjURYfAg6rpSxHoZiaFM
        PPPvTMDDs4FQuvRXm4w+JmFpuj0aMkz1UvK/mDapdMXS/+cJyM6CooXzoHjpr0LQJSRaMQGNJcVwd5tr
        /xRNlZSc0VZY8t1kzP94KKZqq5YWzJk1ueb0yeYJWOMAd3dug5xPpxCTofbalf9MAhrv3yOhD5uSoMDL
        R4/gaU425M350irn86kjS1Ys1SxZadei3HUDFC1fAsWUkKfFRVDte6x3ipFOfB6JLpw9Hu8M74f5n36A
        hTPHYIqRZlHpKvsxD69chNJN66HMyRHu7dkpJKDcxVk1e8qEQdlTxg+kBLRqSEpQmoDHVP8gIvzfn4Dn
        JPzhzRhoyEyHxnsV0FhRJuF5TRV/8U/je3QpStJXr04y0U1PtTY/kTXd9oeCn36wKFnv2LL69Em95N6G
        YTkTBguikwx6YqKuOqGB2ROHYOHnH2KSoeadsk1OQ8pdN7agxBnkzP58dupAy4PUX1KSkdbdBI2uFblz
        Zi1pSE6E+oRbUB8f20RcLDxOJvFXL0HpYQ94cCNSqXhGrJeRGErFEy/q6qDi5AniGNSRw7pbMfAoJkqg
        LpaeI8PbJvc1vZz1oQ0Na1v6omMxh0SlWhq9SOqlV5hk2ftcoql+dPa4AZhHQuMNNDHBUAsTjbUxgYjn
        JEwahvkzRpOtk5lkZR6YaKqbldJH7xm/U/DZB1j87ceYO2U4Jhpp377nsa9nlZ8vVPkea4LiqjzuDUXb
        t0D26hX0saKVimfEehmJoUw8wwm4F+QPRbvcIW+9I9z1PgLVZFf5+0H1+SAo3uTcJ8XapKR47mS8PdgC
        UweZY+ZHgzDvizFY+PV4zKEhn0PB538xFuNIOBNPwuNYPP810sZbehrU5n3Mo9GRNWEQFnz5EeZ/OQ7v
        cCKH9MEUGzMsmjMJ0wb1qi9Yscy2LjEeaknQo2j6EEQuCb9jtxjynNe9uQQU79kBuWtXQjmt1g/DrsGD
        kCtQy85//emrzDHWz9NGWmOMVg+8qd8Tb9JXjdXXxHhzQ0z/cABmTR6BcSa6GEtf/xYLViCWksK/3Zk4
        FDPHD8bEfsZkawn93NTriTE66phkbUpJGobpn33iWHHkEJTv2w2l9FFKD+6F3DUrIXvFsjefgDzntVDk
        vhXuLJwPFb97wH3a129PmeCcTYHFmRvgTRJykwS9hkTEsABdSgqLFP+miKG20DaaRVMylLXJmfo+Jg23
        OXPPx6vF/VO+kLnge8h1dIC8dY5/XQKKd7pDyswZUMYJoGmQNMLmUvbUkRjNYinIN8UNSk7mx8Mw5X3r
        1MINTt05jsyffyTxq/+iBOzbBfmbN9CQ2w9p334FBZudO2bM+3500nDL4vQJQ/A6fbkbHOgb4jolIGW0
        Nd7+sH9dou2E70j4e5l0+Cpw2QAFG50g28Hu/5gA3ucVefAAXj5+DJWXgqFo57aOad9/Oyzps2kLYgZa
        7Y/qbXgjykSnPGv66JdJI60wnAKMpEDfFBG0psRa0TpAi2u0uUF1lJlh3I1+Zp4JUyYuTv1q5rgsuyUq
        Ba6boPZWbJNg3g4VEOtlJEZjZWUz5IedzCW/fB5urBMRbWFQmTjUAjNsaWWn7Sn/mwmYRdtXZC9dDDfU
        xAgO9A0RbqSFEbRrZEwZQX4nConIpOfkkZYY09fwIbVJTJhmu7gmLKT9g8gI4UCkiFgvIzFyNzk1I891
        I2SvcdAN1VNPz5xG29TXE/D2pKEYT1/8hqUxhpvq4jV9DQwl8WEU4JsmlBbSa7RlhptoY1RfI4yj02Qq
        bZW5tGUyYboqD9IWzvugzNcHSo7+3gyxXkZiZCxd1IxMuyWQuuBHo1vD+uXmzBqHIbQ6X9FWxys036/S
        dsd2CAf1F8L+2C/7v0pxXKEtksmYNgqTRlnWJc+bO+Eu3Sk4CYqI9TISo5gypEiJ1xHI37ur461RAyLj
        aahdYvEUwNvGJV6AB5hh4tiBuekr7ExyXDZCzibnZoj1MhKj2PNwcygBxT5eEP+ZrUvMwF54kRa6y+Tw
        bYPjirQ2wdhxwwMqLpxrVUkHtft0c1RErJeRGI8y0pXymG5y2a4bbcN6a9dfJGeX3kIu0g4R0Vf/ZfK8
        //ql4sJ5KDvjpxSxXkZi1NKdvYnbAnV0x6/Py4X6/Dwov3BOLcymV/JFWoiCyaGYCzLkz+J6+bPcVsYf
        tVeskz8rr6M1obdeeabTGpsy/9NQSqfEEt/jUHzMW4JYLyMxGkqKZZTA47JSuEvbRtHpk1AdHwd1OTkQ
        +cmE/We1VPA8ORSgreksrcgBap2J9zCYdoMLVPe6XrUzBqp3xWCyz9HVl21/1U7N4DbcL/dzjv5ye+4/
        sGd3od8gjW6CSO43SEtVaHdWs6ndOaoXoP6vDuwXWnLmVIt8mrp36JSYS1fjsgtnoSyYRkTwOQGxXkZi
        PKVTXxN0AKLTX/5xL0hcsRQqo29A4XFvvUv9+4YFkqOz5JAJJJEXLIwxZ+8uTN3pjrsooNP0e5CeOgZb
        9caCI4fw+vLfcLdGd7xoaYbpm5wwZ/8ezNq78zW5B/dh2Ly5GDRlAhb6eOLpGVPwEAkPIoExc2Yh+cXg
        7/+O+7iOkhNuOx4LqJ3/Z1OpXdPH4FiCaEc4a6ybfdvJcUj2gb2QsGwJpG3bAuVhIVBxPRwq6GMyYr2M
        xHhaXS2jBhpra6GALjppvHoe2NcnyFj3+hnKfiBdWAJZPOFHXzTJwY5ebSoXtm1B564d6Kt2xvjFC4W6
        2ocPcAXdEBO3ugi2slL35ClmRkUKzxk3otBB9T08Z2GCzyorhbrahw9xbV8zPEp901QU6lKuXUUHta4Y
        QHNfHo8/jzI9jaz4RT+PTVm7GtK3u0F56NUm8eGhAvSqBImhmIDioACImjN7UICxbtJpLTX0p8uOGN/u
        nTBjuxu92lQanzzB7ZM+wp1tWuDtVSuEurqqSlytr4Wpv3sI9tP6eow77oNZRw9jrtdRzPX2xHBKViKN
        BC51VVVC+8tfTBdseTny3RzcSXt9Y0W5YEcc9sB13ToJCRDHdIbanNZWK4r6ZtaUO/v3/M8S8Ly+XsZj
        ePn8OWTsdLc52VPl9intHniaOvdT4AQlIM3NlV79RylMTED7Lh0wZtkSwX5UeR9X62li8sH9gl1dUox2
        PbqhR1vA453aoHen1niUwoj+aqbw+6tXr9B97GgM3bJZsOUldPcO3DbIBvHlS8H2/mkeupH/AIWYOM5T
        dCY4paVWevOXBbaVt25CZVwsVMbSX4JelSAxykOvCVSEh0HJpeDuAZa9r56gL3+KO1WCDwVwW5YADlxe
        AlY5oC/Nay7yBCTJEtD49AnmRIRh6bUQvBsWimU0lAN/nIv7LUzxRd0joc1Zx1WYduWy8Fx7767wtyA2
        Bs/YLxOenzU04KYh/dGD1gBBsBJ8dTTQz0gnPd5hea9Eui4nrlkpQK9LkBjB40Y38dEHcOGDYcOOa6pW
        naQ578sdKsGLEpAqS0BlQT6mnAsSnnkY36RhzoUTsEqUAGUl/vx5tH+vHd6NjBDskqREbKC140VjIwas
        tKdpU4dPamuxMP5W0++3U3G1bk88RovwSSVxMSdpTTihq/7Mq3vHaQTIodclSIxyOj0J0JwpuRLc9YyV
        ebA3rcYn6NytDM/uHTHFrWlxqyooQJfB/bGGEsFFPiJq79+TJKDhQQ36L/sNw3+ehzGLf8aohfPRc4Al
        7u/cBjP37RbayEt1URGup5FxPyNdVtNUImg9cezWkcT3VBoXc0ynB/qa6qUkbVhnlLLVBVLomszQ6xKa
        VYjJ9j7ax0tbLd6LVv9jlNFj3LGII6IEPCgvRwda7S//1zeCLS+KCaguLsYltHjtbAnCOuDRDvBI13bo
        pdIJw/7+pdBGXhKDAtCuTUvM8fGS1TQVn4ULcDP59qUYfBRiYrx1e6CnRreimKWLxj/Kz4daOszV0jmG
        odclSIwXT5685uWzRqiMvwVxa1f3O2ZmEH1Eszt6c+ciDnEC3LfSq4gP71bgOnMT3Nu1PRYEnhHquPAu
        sIpW9STZLvDscQMmB/pjtp8v5p05hXn+fph8YC+6mxrgMWsLfNFQL7Tj4rfCDh1b0QL5y3xZTdNOs3nY
        INxN5wJBrAKe2mropd8zL+TrmRPTdu+A6tSUJlKSBagLCRLjxdOnr3nZ+JymQigUnguCLB9PY29T/auH
        aTp40vw6SlsPc5CG4a11jvQqYg0lwJFE7Kc9/CQJqS8rE+of0Aiw76mKsQqrumLZPn0ybu7cFmmrEuxn
        NP83ktAdtM742fTFRto+ueQnJOBKGmlHaKX3lMXB8PMR2q3oOfXmqhXvJ27eAMlbNkP17dQmZImgLiRI
        jOcNDa958eQpVERGAH0loYMcv5NaPv3MQn4nJ0fYGcHPx6zMMd3jAJ5f8ANuJaEcjEePLhg0cRxm0F5/
        lnaDLerd0KePKUbTghbnshFv0YlQTrzrRgxd8gvuMNLBA9QuYOwo4b3zP/2IW+grsx8+GV6b+3fM8DyC
        nnTO2E4nS/Yjj4M5TAk5aqidmbTdzTqPLj3xzmuBRidU0VcXSE4SEOtlJEY13fzEVJHwylQaOhlpUJN1
        B858NPrgAXL+OzkUoNHgQUnYS1/pAIkWkiKr53b7ZPVHyT5EBxS299K0kUCjaJ9KZzxM19nD1O4gbW3C
        e2qi/gjuh+s9OCnU7nUMMjgOH0vz0JzTp1pm+52ErBPHBMiWINbLSIx7CXFSEuOJBKikROQG+vfwMNRO
        PUCZPkgO/wwPhb//DHGbP3vvn/V3QEut4sZK+wEZ3kchjS5CzO1DBySI9TISo4wuPcq4T3Mnas3KT3ap
        dm44wI7eUnb36PLqwtczF2XTtE338VSKWC8jMbLoHq1IdsAZyA7yh1Pjx7jxrW4fOXpb2UOn1qM2fYMK
        Ll9sVUzn/qLQkGaI9TISI+/ihWbkX7nEieh8wMwoejfN473k6G1lD60jew208sId7Exi6BZ7Y8P6Zoj1
        MhIj5Ldfm3Ft2WK4/PN8k136mvm7yMFucvQ2s021S12o/dIJ5XQBKuJRoIBYLyMxojY6NeMG7afhjit1
        3XuqprlrquEOOtXtFMH2fwrFGLZrq6NLlw73ItasHFESdR3yr15uhlgvIzEaKu83p6oSHldXQYj9sqk7
        jfWuuOtqVGzV6P7cTVMVt9HWQzZuZ+d/Me50GdpGU3Ibzfstal1fUTxVO410IwPmzJ5bHh/X+i7t/RVJ
        ic0Q62UUKl418ewpPOV/fKqpFmh88hiKrodDhNOatr5TbQecnPHJHI8h/bfvMje+uk1Xo8RNV/3FNpoe
        fxmUdDddjcodpvoR+6wt9vvP+fLHgG+/Gh66yr5zstdhqMzMAE4Ac4+28Ec52fC0sEBAqlchAauX28FK
        4qzfKXj+uIHqXsHzR7XwrL4O8mgxjHLZAKdnzoBIl40Q8O3XcGOrS+vLdr8NdzPQKtpKQW2l4P4KXLXU
        an0/++Sbi0sWtjv+ySRIPeYNkTRdw+m+n+CxD+6np0E1/1daUSE8pAOc7769sHT+PLAjxHoZqSErLYjx
        48bCJmdnKMnOEn4rpmtyNCXAfxYlwHkd+M36FJK9jkDm2UDYadk7eDPdGF05uDeMCw17NxO9lJt7d3WL
        pHiOT/0Ykg8fgkintXB97SpIPeIBz0qKISMiHNYvWwpj3x8h6JEXsV5Bs9hoRQ0Y8QtqKiqwdvVqiDvl
        C5fXrYaj0yfDBYflELJ0ESQdPQwZQYFw1Hb8euceXXEzBfim2Uhrzw5rC7/UU74tMumiFkUfI9zNFc6v
        sIML9kshhJ7tFy4E1W7dZAqa9Mi1ifUyEkPeSIy8vNe+PXQhOrVuDd07dYI9DiugMOQKFEdFwtlFC2ev
        U+3cuIkCfNOspzuC14wpK+N/94Cc496w8asvKZ6O0LldO+hCdG7XVhZxcy2MWC8jMZS9IEextGzVCiaN
        Hg13gs9D9LYt5us11YqddTRwA63OYrjOmVZqZ9qinBV+a44mOtHO4qSpvD3bjt061d/Y4jKpurgIHBYv
        hvbtO8gi+kdRFr8csV5GYih74Y+QT5NR1taQfP5cmx02/S6u0VDB9RTkehJNCcENWmqN280Mc9xs+p3a
        ZG4STnWvnOj3P2JtTzXcam6a7D7I5vgOc5Pbm3TUG7if9ZQM7nedVg/cZKibHOK+VX2klaUsAuXx/RFi
        vYzEUPbCn8FFU1sbXKdPnbpFTzPP1UD7nksvw6SNVhaHHYYP/mbWQBsTC319+NDCXNPdyuLSOk01XMti
        FaF6NzOjVPtPp1vbmJnBF0MGac+3sZzmOrj/DpfeRtFbjHRLXXV7Fm2fMmm+NvnjoiyeP0Osl5EYCo1b
        EC1l0ICHvxGtiTZEW6KdjPbUvL2Gikr7iUYGgz7W0xkzxszUsEeXLh3ad+jQkn7jSdmxVdu2f5tk1c/S
        2dQgdi0N8zUk+jX0hTcY6hTMHTFsYvuOHalL6Ei0+1vrNi27durUdqS5uaatseFwYqiZvj7/1p79imLg
        eDgujo/j5HjlsbOO17rEehmJIWvEL3FHHEkXojuhRqgTPQktQpfQJwwIQ8KYXmX0CF3CiDCladKbfjNn
        6NmCwjIYaWw4dZW+VhqLdmTxtK1REspnmJvNa922rQG9J7RnKHu9ye5FSPpmfwT7Zf8cB8fDcXF8HCfH
        y3Fz/KyD9bAuiV5GYlADzhZn8j1Ck2AnLKIvYU0MIAYTQ4nhxAjifWIUMVrGB8SHIsbIGEtJGAstWgy3
        0dT4bomBTgIJf2xvoJ07zkBvOS2qwyk+oZ3oHXE/3K/cB/tjv+yf4+B4OC6Oj+PkeDlujp91sB7W1UKs
        l5EY3EDWkDPHGeVM9yGsCO58ECEXzwGMJOTimwmWMU4MfdWPSOgona5dZwxV6bbcVFVldouWLUdRciTt
        ZMj7UEyIPAnsn+OQJ4Hj4zg5Xo6b42cdrOdfSoB8CvCc6kR0I3g4aRDckQ4hH/o8FE0IU6IXIR/uFjL4
        KzD9RFjKsCJXfQgzwoKSIq9nxO3lfcj75P7ZD/tjv+yf45BPBY6P4+R4OW6On3Wwnn9pCsiRL4C8mIgX
        QPHi14Hg+cWwE4aHGmeb6SqCA+E5KUdFCeLfub34fXmf3L/cl9w3xyFeDMULoXwxfL0QivUyEkPe6H8B
        OxDDTv/dKPpQFsefItbLNKt411Ba+S6htPJdQmnlu4TSyncHhP8Gku0IGExOYkcAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAGABoAwAAFgAAACgAAAAQAAAAIAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABY
        W4dkZo0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbIIdGSpUaIIodIotITJYbIIgA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABucrkUGokZH44ZH4wZH4wZH44UGol8gMAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAQFo8WHJIaH5QZH5MYHpMZHpMZH5QaH5QWHJIQFo8AAAAAAAAAAAAAAAAAAAAAAAAS
        GJcaH5sUG5kaIJslKqAiJ50XHZkXHZoYH5oYHpkAAAAAAAAAAAAAAAAAAACZnNYXHqJ+gsScntKgos6u
        sNtna72bnc+Hi8llabgOFZ6jptoAAAAAAAAAAAAAAAAdI6sXHanIyue6u9m1t9W4ut+ChcrS0+Xk5e2R
        k8YNFKMyN7IAAAAAAAAAAAAAAAAAAAAUG69zd8s/RLd0eMeZnNyMj9RiZsF0eMleYr4WHawAAAAAAAAA
        AAAAAAAAAAAAAAATG7gRGLUWHrgSGbcPF7URGLYTG7cSGbYTGbcXILoAAAAAAAAAAAAAAAAAAAAAAABh
        adcnMccaIcAbIsAbI8EbI8EbIsAaIsAqNchnb9kAAAAAAAAAAAAAAAAAAAAAAAAAAACTmOcWH8gcJcoa
        IccbIsgcJcoXIMinq+sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBiOYAAAA1P9ZAStkAAAB/heUA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//6xB//+sQf5/
        rEH4H6xB8A+sQeAHrEHgB6xBwAOsQcADrEHgB6xB4AesQeAHrEHwD6xB+l+sQf//rEH//6xB
</value>
  </data>
</root>