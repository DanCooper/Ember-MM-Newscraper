<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbTopLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>