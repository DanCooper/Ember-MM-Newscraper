<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tsImgView.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbFit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAALESURBVDhPrZBpSFRRGIaPEUGkBCVGCCG2EFJCTdg/hQTX
        DKoxsggsbFOQMJcsE3HLUCGhyGWQJk0pIXUal9TBO8O4kMvsizrqTM525xpjYf707Thec+lvLzyc833n
        vC/fOeS/6ffSUoTL5XrLcqyI5biGNbgdbPSWl5cTeNu6VldXA+xu95jK7obOxVE8vlVPMfjqDTxQOzxY
        8HDzKysrR3g7IRznFHyzLkBs/o5mno/TNogM31GvX99v9MUmG4asDnhZVsjbaYDTKWAsNpSMm1AxYUa1
        yoxbX2cQVGfBwVoLhF0zqKK9l/SsZMyEXnrXu8he4e2ELNEJeqfnkKnUIG9Ei3RGhz2VOpAyNUi5Gn4V
        OtwZ0OHJqNZ357N5jgYsbg9oN84gRTaGNPk4LknGQQpGQYp4no0iqk2LVEaP5H4NmvQz+LVtAvqEFq0Z
        0VIlLvYOI7FnCPvL5CC5DEgeg71FDB7IapCrLMe9wUrUqfX/BrxTGXG+g8EFqQJRnQoElfWBZPZQehFY
        3IWa0WNoGPNH9fAh1E4O00/c8oS1T2yc1COik0GkRIF9ORKQu+0g6R0gDzuwK70Nz/tPUXMwCuWheD0x
        hEXnlgmcNptATAPCv8hxuEoKclUMcqNpnZQWkNQ2ZHcLUKo4ihxZGBpVanid3s0Ak8kkMJqn0G0wo21Y
        jw8yNVoZLT7JjajvG8RlUTweScPxuDsMWd2n8UKWjOaR4s0Ai8VyzmgwYH5qCg7bPDyOBXAuOxbdTvyg
        iJTZuPY+BLdbw3G9KRSlPTdhnlMl83ZChELhAblcbp2bnYXVaoXDbofb5QLLsuA8Hni5JbwaKET0m5Mo
        kNyHRqP5mZGWcYK3Ez+Kf2Bg4Nn42NisuJiYPLrmJ8bGPk2Mj/eRtEZiUn7ImeC8hLiE7OMhIZHUE8B7
        fdpN+VvwWqu3slPUQ8gfT7YdkfHiWHkAAAAASUVORK5CYII=
</value>
  </data>
  <data name="tsbFull.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAALASURBVDhPrZBrSFNhHMZfKYSUSkkQi8I+RWlWMzFKQrxO
        7Iu0UPCTEYqUZhdUKNIsMUz9EiZpmpekEMNLXrPszLSGl93dpg63Mz2e7UzNoeA3n87ODkz2uQd+/F/e
        //M88L7kv8nlcl1hWfatw+l473A6m9w4ffDcOZp2dnbSxJhHe3t7h212+5xq1Q4d64SW5YSpF3GfPXBQ
        Mw7YOKdld3c3XIwTwjGMRGFZQavRhg4TjQ4jjc+LNBr1NN7pPGf3nXvXys9JK4MtjssU456CcbMVFTNG
        vJozoUZlQvbIEo41mBHMkzGwhBqlSdi5PcNmGlsb3C0xTshfjpEMmZZROKlByR8t8n/q4P9aB1KpFvCr
        0iJnTIdShVbwdPPebd+C7vklZH2fxh35LKQ9MyBPFSBlIk8UiO9S47ZcLXjadIs+BfwT2jVGJAz8wo2R
        KYGjlXKQYgqkhMKhMjmyRz8iZ7yT90yiXmXANudT0KyaR2wvxRsmEN8/gZAX30AKh0EKRhHyfAAN0+Go
        nz6Na31jqJs18J/Iegvcn9g4p0NMH4XrfDjgcT9Ibg9Ifi/8733BkYedqJKfRfVUJL8fRO2MCtvshreA
        sVolbUo9or7KcbxuEETWBpL5CUGF1SgfP49nPy6hgjojUE5J8FIejTe/070FSwaDxGBaQL/ehM5JLT6M
        KtE+pkfzeB9KRyNRMhKFR0MRAsXDUQK1VIa3wGw2Rxvn52FZWMAabQG3toJ1dhVOdg3LtBl6sxK5XZeR
        1xUDjWkaxkU9bJbVLDFOSHpcXLCcolasFgtsNI01hoHDboeT47C5vgmGXcHNlquQtcTBaluGRqNxyWSy
        c2Kc+PEEBAcGRiQnJOSlJCYWpCYl3ZempBRJk5MfuElPkRadvBBWdOpiWGFaatrdE6GhsXwmSMwKOiDO
        /XIvfdmvg4QQ8g8CUB2ag2P9oQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAGABoAwAAFgAAACgAAAAQAAAAIAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADKysre3t7g4ODk5OXn5+jp
        6enp6erp6ern5+jl5ebj4+TT09QAAAAAAAAAAAAAAADU1NbZ2d/f4ebj5erk5+vl5+zl6Ozl5+zl6Ovj
        5erf4OXb290AAAAAAAAAAAAAAADZ2NfY1bbUx6vQvaXSv6fTwKjTwKjTwKjSv6fUxqra17bf3tkAAAAA
        AAAAAAAAAADUzqDBsy60jhqhUwCjWgCjWgCjWgCjWgChVACxghHAsy3Ty48AAAAAAAAAAAAAAADUzZrA
        sTXCsj+ydQuvZQCwagCwagCvZgCxbwfBrjvAsTbSyowAAAAAAAAAAAAAAADVz53AsDfCtULCsT66hRa3
        bgC3bgC5fxHBrz3CtUPAsDfTzI8AAAAAAAAAAAAAAADX0aPEtELGuEzFuEzBhhDAdgDAdwDBgAnFtEjG
        uE3EtELWz5UAAAAAAAAAAAAAAADb1azKvFnMwWTMr0nIfADIgADIgADIewDLq0PMwmXKvFna1KIAAAAA
        AAAAAAAAAADe2bbRxG7Sx3fTwGnTiwfQhQDQhQDSiAHTu2HSyHjRxG7e2K0AAAAAAAAAAAAAAADg3L7X
        y4PYzYjYz43bul7cmBXcmBPbtVPYzozYzYnXy4Ph3LcAAAAAAAAAAAAAAADj38ji2KHi2KTi2KTh2qji
        1Zzi1Jvh2qni2KTi2KTh16Hl4MQAAAAAAAAAAAAAAADu7eno5M/r59Pq59Pr59Pr59Tr59Xr59Pr59Pq
        59Pp5dDt7OYAAAAAAAAAAAAAAAAAAADx8fLy8vLy8vLy8vLz8vLz8vLz8vLy8vLy8vLy8vIAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//6xB//+sQcAD
        rEHAA6xBwAOsQcADrEHAA6xBwAOsQcADrEHAA6xBwAOsQcADrEHAA6xBwAOsQeAHrEH//6xB
</value>
  </data>
</root>