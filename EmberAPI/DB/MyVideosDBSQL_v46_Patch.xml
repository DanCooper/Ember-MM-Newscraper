<?xml version="1.0"?>
<CommandFile xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <transaction name="MyVideosDBSQL_v46_to_v47">
    <command type="DB">
      <description>added tag_order field to taglinks table</description>
      <execute>ALTER TABLE taglinks ADD tag_order REAL NOT NULL DEFAULT 0;</execute>
    </command>
    <command type="DB">
      <description>recreate movielist view to order tags by tag_order</description>
      <execute>

        DROP VIEW movielist;

        CREATE VIEW movielist
        AS
        SELECT ordered_movies.*,
        GROUP_CONCAT(DISTINCT Country) AS Country,
        GROUP_CONCAT(DISTINCT Credits) AS Credits,
        GROUP_CONCAT(DISTINCT Director) AS Director,
        GROUP_CONCAT(DISTINCT Genre) AS Genre,
        GROUP_CONCAT(DISTINCT Studio) AS Studio,
        GROUP_CONCAT(DISTINCT Tag) AS 'Tag'
        FROM (
        SELECT
        movie.*,
        CASE WHEN movie.SortTitle IS NOT '' THEN movie.SortTitle ELSE movie.ListTitle END AS SortedTitle,
        source.strName AS Source,
        banner.url AS BannerPath,
        clearart.url AS ClearArtPath,
        clearlogo.url AS ClearLogoPath,
        discart.url AS DiscArtPath,
        fanart.url AS FanartPath,
        landscape.url AS LandscapePath,
        poster.url AS PosterPath,
        countries.strCountry AS Country,
        credits.strActor AS Credits,
        directors.strActor AS Director,
        genres.strGenre AS Genre,
        studios.strStudio AS Studio,
        tags.strTag AS 'Tag'
        FROM
        movie
        LEFT OUTER JOIN moviesource AS source ON (source.idSource = movie.idSource)
        LEFT OUTER JOIN art AS banner ON (banner.media_id = movie.idMovie)
        AND (banner.media_type = 'movie')
        AND (banner.type = 'banner')
        LEFT OUTER JOIN art AS clearart ON (clearart.media_id = movie.idMovie)
        AND (clearart.media_type = 'movie')
        AND (clearart.type = 'clearart')
        LEFT OUTER JOIN art AS clearlogo ON (clearlogo.media_id = movie.idMovie)
        AND (clearlogo.media_type = 'movie')
        AND (clearlogo.type = 'clearlogo')
        LEFT OUTER JOIN art AS discart ON (discart.media_id = movie.idMovie)
        AND (discart.media_type = 'movie')
        AND (discart.type = 'discart')
        LEFT OUTER JOIN art AS fanart ON (fanart.media_id = movie.idMovie)
        AND (fanart.media_type = 'movie')
        AND (fanart.type = 'fanart')
        LEFT OUTER JOIN art AS landscape ON (landscape.media_id = movie.idMovie)
        AND (landscape.media_type = 'movie')
        AND (landscape.type = 'landscape')
        LEFT OUTER JOIN art AS poster ON (poster.media_id = movie.idMovie)
        AND (poster.media_type = 'movie')
        AND (poster.type = 'poster')
        LEFT OUTER JOIN countrylinkmovie AS countrylink ON (countrylink.idMovie = movie.idMovie)
        LEFT OUTER JOIN country AS countries ON (countries.idCountry = countrylink.idCountry)
        LEFT OUTER JOIN writerlinkmovie AS writerlink ON (writerlink.idMovie = movie.idMovie)
        LEFT OUTER JOIN actors AS credits ON (credits.idActor = writerlink.idWriter)
        LEFT OUTER JOIN directorlinkmovie AS directorlink ON (directorlink.idMovie = movie.idMovie)
        LEFT OUTER JOIN actors AS directors ON (directors.idActor = directorlink.idDirector)
        LEFT OUTER JOIN genrelinkmovie AS genrelink ON (genrelink.idMovie = movie.idMovie)
        LEFT OUTER JOIN genre AS genres ON (genres.idGenre = genrelink.idGenre)
        LEFT OUTER JOIN studiolinkmovie AS studiolink ON (studiolink.idMovie = movie.idMovie)
        LEFT OUTER JOIN studio AS studios ON (studios.idStudio = studiolink.idStudio)
        LEFT OUTER JOIN taglinks AS taglinks ON (taglinks.idMedia = movie.idMovie and taglinks.media_type='movie')
        LEFT OUTER JOIN tag AS tags ON (tags.idTag = taglinks.idTag)
        ORDER BY movie.idMovie, taglinks.tag_order
        ) AS ordered_movies
        GROUP BY ordered_movies.idMovie;
      </execute>
    </command>
    <command type="DB">
      <description>recreate tvshowlist view to order tags by tag_order</description>
      <execute>

        DROP VIEW tvshowlist;

        CREATE VIEW tvshowlist
        AS
        SELECT ordered_tvshows.*,
        GROUP_CONCAT(DISTINCT Country) AS Country,
        GROUP_CONCAT(DISTINCT Creator) AS Creator,
        GROUP_CONCAT(DISTINCT Director) AS Director,
        GROUP_CONCAT(DISTINCT Genre) AS Genre,
        GROUP_CONCAT(DISTINCT Studio) AS Studio,
        GROUP_CONCAT(DISTINCT Tag) AS Tag,
        COUNT(DISTINCT Episodes) AS Episodes,
        COUNT(DISTINCT CASE WHEN Playcount IS NOT NULL THEN Episodes ELSE NULL END) AS Playcount,
        CASE WHEN COUNT(DISTINCT Episodes) IS NOT 0 AND COUNT(DISTINCT Episodes) = COUNT(DISTINCT CASE WHEN Playcount IS NOT NULL THEN Episodes ELSE NULL END) THEN 1 ELSE 0 END AS HasWatched,
        COUNT(DISTINCT CASE WHEN NewEpisodes IS 1 THEN Episodes ELSE NULL END) AS NewEpisodes,
        COUNT(DISTINCT CASE WHEN MarkedEpisodes IS 1 THEN Episodes ELSE NULL END) AS MarkedEpisodes,
        COUNT(DISTINCT CASE WHEN LockedEpisodes IS 1 THEN Episodes ELSE NULL END) AS LockedEpisodes

        FROM (
        SELECT
        tvshow.*,
        CASE WHEN tvshow.SortTitle IS NOT '' THEN tvshow.SortTitle ELSE tvshow.ListTitle END AS SortedTitle,
        source.strName AS Source,
        banner.url AS BannerPath,
        characterart.url AS CharacterArtPath,
        clearart.url AS ClearArtPath,
        clearlogo.url AS ClearLogoPath,
        fanart.url AS FanartPath,
        landscape.url AS LandscapePath,
        poster.url AS PosterPath,
        countries.strCountry AS Country,
        creators.strActor AS Creator,
        directors.strActor AS Director,
        genres.strGenre AS Genre,
        studios.strStudio AS Studio,
        tags.strTag AS Tag,
        episodelist.idEpisode AS Episodes,
        episodelist.Playcount AS Playcount,
        episodelist.New AS NewEpisodes,
        episodelist.Mark AS MarkedEpisodes,
        episodelist.Lock AS LockedEpisodes
        FROM
        tvshow
        LEFT OUTER JOIN tvshowsource AS source ON (source.idSource = tvshow.idSource)
        LEFT OUTER JOIN art AS banner ON (banner.media_id = tvshow.idShow)
        AND (banner.media_type = 'tvshow')
        AND (banner.type = 'banner')
        LEFT OUTER JOIN art AS characterart ON (characterart.media_id = tvshow.idShow)
        AND (characterart.media_type = 'tvshow')
        AND (characterart.type = 'characterart')
        LEFT OUTER JOIN art AS clearart ON (clearart.media_id = tvshow.idShow)
        AND (clearart.media_type = 'tvshow')
        AND (clearart.type = 'clearart')
        LEFT OUTER JOIN art AS clearlogo ON (clearlogo.media_id = tvshow.idShow)
        AND (clearlogo.media_type = 'tvshow')
        AND (clearlogo.type = 'clearlogo')
        LEFT OUTER JOIN art AS fanart ON (fanart.media_id = tvshow.idShow)
        AND (fanart.media_type = 'tvshow')
        AND (fanart.type = 'fanart')
        LEFT OUTER JOIN art AS landscape ON (landscape.media_id = tvshow.idShow)
        AND (landscape.media_type = 'tvshow')
        AND (landscape.type = 'landscape')
        LEFT OUTER JOIN art AS poster ON (poster.media_id = tvshow.idShow)
        AND (poster.media_type = 'tvshow')
        AND (poster.type = 'poster')
        LEFT OUTER JOIN countrylinktvshow AS countrylink ON (countrylink.idShow = tvshow.idShow)
        LEFT OUTER JOIN country AS countries ON (countries.idCountry = countrylink.idCountry)
        LEFT OUTER JOIN creatorlinktvshow AS creatorlink ON (creatorlink.idShow = tvshow.idShow)
        LEFT OUTER JOIN actors AS creators ON (creators.idActor = creatorlink.idActor)
        LEFT OUTER JOIN directorlinktvshow AS directorlink ON (directorlink.idShow = tvshow.idShow)
        LEFT OUTER JOIN actors AS directors ON (directors.idActor = directorlink.idDirector)
        LEFT OUTER JOIN genrelinktvshow AS genrelink ON (genrelink.idShow = tvshow.idShow)
        LEFT OUTER JOIN genre AS genres ON (genres.idGenre = genrelink.idGenre)
        LEFT OUTER JOIN studiolinktvshow AS studiolink ON (studiolink.idShow = tvshow.idShow)
        LEFT OUTER JOIN studio AS studios ON (studios.idStudio = studiolink.idStudio)
        LEFT OUTER JOIN taglinks ON (taglinks.idMedia = tvshow.idShow) AND (taglinks.media_type = 'tvshow')
        LEFT OUTER JOIN tag AS tags ON (tags.idTag = taglinks.idTag)
        LEFT OUTER JOIN episodelist ON (tvshow.idShow = episodelist.idShow) AND (episodelist.Missing = 0)
        ORDER BY tvshow.idShow, taglinks.tag_order
        ) AS ordered_tvshows
        GROUP BY ordered_tvshows.idShow;
      </execute>
    </command>


  </transaction>
  <noTransaction type="">
  </noTransaction>
<!-- 
  <noTransaction type="DB">
    <description>nd1</description>
    <execute>ne1</execute>
  </noTransaction>
-->
</CommandFile>