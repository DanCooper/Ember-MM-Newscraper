<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnFrameSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DzKv1O9K1RWQAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnFrameLoad.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>